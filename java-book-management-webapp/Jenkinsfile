pipeline {
    agent any

    environment {
        IMAGE_NAME = 'book-crud-app'
        CONTAINER_NAME = 'book-crud-container'
        HOST_PORT = '8081'
        CONTAINER_PORT = '8081'
        APP_DIR = 'java-book-management-webapp'
    }

    stages {
        
        stage('Build Docker Image') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        docker.build("${IMAGE_NAME}:latest", ".")
                    }
                }
            }
        }


    stage('Run Docker Container') {
        steps {
            dir('java-book-management-webapp') {
                script {
                    // Check if container exists and stop & remove it if it does
                    bat """
                        docker ps -a --format "{{.Names}}" | findstr /R /C:"^${CONTAINER_NAME}\$" >nul
                        if %ERRORLEVEL% == 0 (
                            echo Stopping and removing existing container...
                            docker stop ${CONTAINER_NAME}
                            docker rm ${CONTAINER_NAME}
                        ) else (
                            echo No existing container found.
                        )
                    """
                    // Start new container
                    bat "docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${IMAGE_NAME}:latest"
                }
            }
        }
    }


    }
}
