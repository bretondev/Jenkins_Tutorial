pipeline {
    agent any

    environment {
        IMAGE_NAME = 'book-crud-app'
        CONTAINER_NAME = 'book-crud-container'
        HOST_PORT = '8081'
        CONTAINER_PORT = '8081'
        APP_DIR = 'java-book-management-webapp'
    }

    stages {
        
        stage('Build Docker Image') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        docker.build("${IMAGE_NAME}:latest", ".")
                    }
                }
            }
        }


        stage('Run Docker Container') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        bat 'docker ps -a --format "{{.Names}}" | findstr /R /C:"^' + CONTAINER_NAME + '$" >nul'
                        bat """
                        if %ERRORLEVEL% == 0 (
                            docker stop ${CONTAINER_NAME}
                            docker rm ${CONTAINER_NAME}
                        )
                        """
                        bat "docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${IMAGE_NAME}:latest"
                    }
                }
            }
        }

    }
}
